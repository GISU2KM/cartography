% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tc_get_png.R
\name{tc_get_png}
\alias{tc_get_png}
\title{Get a RasterBrick from a png file}
\usage{
tc_get_png(
  x,
  file,
  align = "center",
  margin = 0,
  crop = FALSE,
  mask = TRUE,
  inverse = FALSE
)
}
\arguments{
\item{x}{an \code{sf} object, a simple feature collection (POLYGON or 
MULTIPOLYGON).}

\item{file}{path to the file.}

\item{align}{set how the \code{.png} file should be fitted within \code{x}.
Possible values are \code{'left','right','top', 'bottom'} or \code{'center'}.}

\item{margin}{inner margin, zooms out the \code{.png} over \code{x}. If 0
then \code{.png} is completely zoomed over \code{x}.}

\item{crop}{\code{TRUE} if results should be cropped to the specified 
\code{x} extent.}

\item{mask}{\code{TRUE} if the result should be masked to \code{x}.}

\item{inverse}{logical. If \code{FALSE}, overlapped areas of \code{x} on 
\code{pngpath} are extracted, otherwise non-overlapping areas are returned. 
See \code{\link[raster:mask]{mask}}.}
}
\value{
A \code{RasterBrick} object is returned.
}
\description{
Get a \code{RasterBrick} from a \code{.png} image cut using the 
shape of a spatial object.
}
\details{
The effect of \code{align} would differ depending of the aspect 
ratio of \code{x} and \code{pngpath}. To obtain a fitted tile from 
\code{pngpath} 
given that \code{x} is the tile to fit, set \code{margin = 0 , crop = TRUE}.
}
\note{
The accuracy of the final plot would depend on the quality of the 
\code{.png} file, 
the scale of \code{x} and the resolution setup of the graphic device. 
Exporting to \code{svg} is highly
recommended.
}
\examples{
mtq <- tc_import_mtq()
file_path <- system.file("img/LogoMartinique.png", package = "cartography")
mask <- tc_get_png(x = mtq, file = file_path)
}
\seealso{
\link{tc_map_r}
}
