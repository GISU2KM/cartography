# Generated by roxygen2: do not edit by hand

export(barscale)
export(carto.pal)
export(carto.pal.info)
export(choroLayer)
export(discLayer)
export(display.carto.all)
export(display.carto.pal)
export(dotDensityLayer)
export(getBorders)
export(getBreaks)
export(getFigDim)
export(getGridLayer)
export(getLinkLayer)
export(getOuterBorders)
export(getPencilLayer)
export(getPngLayer)
export(getTiles)
export(ghostLayer)
export(gradLinkLayer)
export(gradLinkTypoLayer)
export(hatchedLayer)
export(labelLayer)
export(layoutLayer)
export(legendBarsSymbols)
export(legendChoro)
export(legendCirclesSymbols)
export(legendGradLines)
export(legendHatched)
export(legendPropLines)
export(legendPropTriangles)
export(legendSquaresSymbols)
export(legendTypo)
export(legendWaffle)
export(north)
export(pngLayer)
export(propLinkLayer)
export(propSymbolsChoroLayer)
export(propSymbolsLayer)
export(propSymbolsTypoLayer)
export(propTrianglesLayer)
export(smoothLayer)
export(tc_annotation)
export(tc_arrow)
export(tc_credits)
export(tc_get_borders)
export(tc_get_breaks)
export(tc_get_grid)
export(tc_get_pal)
export(tc_get_pencil)
export(tc_import_mtq)
export(tc_init)
export(tc_label)
export(tc_layout)
export(tc_leg_c)
export(tc_leg_p)
export(tc_leg_s)
export(tc_leg_t)
export(tc_legacy_mode)
export(tc_map)
export(tc_map_c)
export(tc_map_p)
export(tc_map_pc)
export(tc_map_pt)
export(tc_map_t)
export(tc_scale)
export(tc_theme)
export(tc_title)
export(tilesLayer)
export(typoLayer)
export(waffleLayer)
export(wordcloudLayer)
import(graphics)
import(sf)
importFrom(Rcpp,evalCpp)
importFrom(grDevices,colorRampPalette)
importFrom(grDevices,hcl.colors)
importFrom(grDevices,hcl.pals)
importFrom(grDevices,png)
importFrom(grDevices,svg)
importFrom(graphics,box)
importFrom(methods,is)
importFrom(rgeos,createSPComment)
importFrom(sf,st_as_sf)
importFrom(sf,st_as_sfc)
importFrom(sf,st_bbox)
importFrom(sf,st_coordinates)
importFrom(sf,st_crs)
importFrom(sf,st_geometry)
importFrom(sf,st_read)
importFrom(sf,st_transform)
importFrom(stats,aggregate)
importFrom(stats,median)
importFrom(stats,na.omit)
importFrom(stats,quantile)
importFrom(stats,runif)
importFrom(stats,sd)
importFrom(utils,download.file)
importFrom(utils,globalVariables)
useDynLib(cartography, .registration = TRUE)
